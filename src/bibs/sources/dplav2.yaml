namespace:
  'dplav2'
help: | 
   --------------------------------------------
    Digital Public Library of America Version 2
   --------------------------------------------

   APIs: 
     items

   Documentation:
     http://dp.la/info/developers/codex/

   About:
     The Digital Public Library of America brings together 
     the riches of America’s libraries, archives, and museums, 
     and makes them freely available to the world. It strives to 
     contain the full breadth of human expression, from the written 
     word, to works of art and culture, to records of America’s heritage, 
     to the efforts and data of science.

url:
  'http://api.dp.la/v2'

parameters:

  required: &required
    mode: field
    keywords: [api_key]

  keywordsearch: &keywordsearch
    mode: field
    keywords: [q]
    
  sourceResourceTextFields: &sourceresourcetextfields
    '_context': '@context' 
    '_id': '@id'
    count: 'count'

    dataProvider: 'dataProvider'
    docs: 'docs'
    
    hasView:
      hasView: 'hasView'
      '_id': 'hasView.@id'
      format: 'hasView.format'
      rights: 'hasView.rights'

    id: 'id'
    ingestDate: 'ingestDate'
    ingestType: 'ingestType'

    isPartOf:
      isPartOf: 'isPartOf'
      '_id': 'isPartOf.@id'
      name: 'isPartOf.name'

    isShownAt:
      isShownAt: 'isShownAt'
      '_id': 'isShownAt.@id'
      format: 'isShownAt.format'
      rights: 'isShownAt.rights' 
    
    object:
      object: 'object'
      '_id': 'object.@id'
      format: 'object.format'
      rights: 'object.rights'

    provider:
      provider: 'provider'
      '_id': 'provider.@id'
      name: 'provider.name'

    collection: 
      collection: 'sourceResource.collection'
      '_id': 'sourceResource.collection.@id'
    
    contributor: 'sourceResource.contributor'  
    creator: 'sourceResource.creator'
    description: 'sourceResource.description'

    date:
      date: 'sourceResource.date'
      begin: 'sourceResource.date.begin'
      displayDate: 'sourceResource.date.displayDate'
      end: 'sourceResource.date.end'
      
    description: 'sourceResource.description'
    extent: 'sourceResource.extent'
    format: 'sourceResource.format'
    identifier: 'sourceResource.identifier'

    language:
      language: 'sourceResource.language'
      name: 'sourceResource.language.name'
      iso369: 'sourceResource.language.iso369'
      
    physicalMedium: 'sourceResource.physicalMedium'
    publisher: 'sourceResource.publisher'
    rights: 'sourceResource.rights'

    spatial:
      spatial:     'sourceResource.spatial'
      coordinates: 'sourceResource.spatial.coordinates'
      city:        'sourceResource.spatial.city'
      county:      'sourceResource.spatial.county'
      distance:    'sourceResource.spatial.distance'
      iso3166_2:   'sourceResource.spatial.iso3166-2'
      name:        'sourceResource.spatial.name'
      region:      'sourceResource.spatial.region'
      state:       'sourceResource.spatial.state'
      
    stateLocatedIn:
      name:        'sourceResource.stateLocatedIn.name'
      iso3166_2:   'sourceResource.stateLocatedIn.iso3166-2'
      
    subject:
      subject: 'sourceResource.subject'
      '_id':   'sourceResource.subject.@id'
      '_type': 'sourceResource.subject.@type'
      name:    'sourceResource.subject.name'

    temporal:
      temporal: 'sourceResource.temporal'
      begin: 'sourceResource.temporal.begin'
      end: 'sourceResource.temporal.end'
    
    title: 'sourceResource.title'
    type: 'sourceResource.type'    


  sourceResources: &sourceresources
    mode: field
    parameters: *sourceresourcetextfields


  fields: &fields
    mode: field
    prefix: 'fields'
    parameters: *sourceresourcetextfields


  facets: &facets
    mode: field
    prefix: 'facets'
    syntax:
      bind: '='
      chain: '&'
      multi: ','
      args: ':'
    parameters: *sourceresourcetextfields

                  
  sort: &sort
    mode: field
    sort_by:
      prefix: 'sort_by'
      parameters: *sourceresourcetextfields

    sort_order:
      prefix: 'sort_order'
      parameters:
        asc: 'asc'
        desc: 'desc'

    sort_by_pin: 'sort_by_pin'
      
      
api:  
  items: &items
    help: | 
      -------
       items
      -------
      
      Grammar:
        (FIELD)->VALUE ...(OPTION)->VALUE
    namespace: 'items'
    path: '/items?{0}'
    input:
      type: key_value
      params: 
        keywordsearch: *keywordsearch
        sourceresources: *sourceresources 
        facets: *facets
        fields: *fields
        sort: *sort
      options: 
        page: page
        page_size: page_size
        facet_size: facet_size
        callback: callback
      required: *required
      multi_value: True
      syntax:
        prototype:
          bind: '='
          chain: '&'
        field:
          bind: '='
          chain: '&'
        option:
          bind: '='
          chain: '&'
        multi:
          bind: ','
          chain: Null
    output:
      default: json

  #collections:
  #  help:
  #  path:
  #  input:
  #  output:

  default: *items