namespace:
  'bhlv2'
help: |
  -----------------------------------------
   Biodiversity Heritage Library Version 2
  -----------------------------------------

  APIs:
    query

  Documentation:
    http://www.biodiversitylibrary.org/api2/docs/docs.html

  About:
    The Biodiversity Heritage Library (BHL) is a consortium 
    of natural history and botanical libraries that cooperate 
    to digitize and make accessible the legacy literature of 
    biodiversity held in their collections and to make that 
    literature available for open access and responsible use as 
    a part of a global “biodiversity commons.” The BHL consortium 
    works with the international taxonomic community, rights holders, 
    and other interested parties to ensure that this biodiversity 
    heritage is made available to a global audience through open 
    access principles. In partnership with the Internet Archive 
    and through local digitization efforts , the BHL has digitized 
    millions of pages of taxonomic literature , representing tens 
    of thousands of titles and over 100,000 volumes.

url:
  'http://biodiversitylibrary.org/api2'

parameters: 

  required: &required
    mode: field
    keywords: [apikey]

  identifiers_1: &ids1
    mode: field
    keywords: [barcode, ia]

  identifiers_2: &ids2
    mode: field
    keywords: 
      [doi, oclc, issn, isbn, 
      lccn, ddc, nal, nlm, coden]
      
  methods: &methods
    mode: prototype
    prefix: {'op': ''}

    AuthorSearch:
      parameters:
        name: ' '

    BookSearch:
      parameters:
        title: ' '
        lname: ' '
        volume: ' '
        edition: ' '
        year: ' '
        subject: ' '
        language: ' '
        colectionid: ' '
        
    GetAuthorParts:
      parameters:
        creatorid: ' '

    GetAuthorTitles:
      parameters:

        creatorid: ' '

    GetCollections: 
      parameters: Null
    
    GetItemByIdentifier:
      parameters:
        type: *ids1
        value: ' '

    GetItemMetadata:
      parameters:
        itemid: ' '
        pages: ' '
        ocr: ' '
        parts: ' '

    GetItemPages:
      parameters:
        itemid: ' '
        ocr: ' '

    GetItemParts:
      itemid: ' '

    GetLanguages:
      parameters: Null
    
    GetPageMetadata:
      parameters:
        pageid: ' '
        ocr: ' '
        names: ' '

    GetPageNames:
      parameters:
        pageid: ' '

    GetPageOcrText:
      parameters:
        pageid: ' '

    GetPartBibTeX:
      parameters:
        partid: ' '

    GetPartByIdentifier:
      parameters:
        type: *ids2
        value: ' '

    GetPartEndNote:
      parameters:
        partid: ' '

    GetPartMetadata:
      parameters:
        partid: ' '

    GetPartNames:
      parameters:
        partid: ' '

    GetSubjectParts:
      parameters:
        subject: ' '

    GetSubjectTitles:
      parameters:
        subject: ' '

    GetTitleBibTex:
      parameters:
        titleid: ' '
        
    GetTitleByIdentifier:
      parameters:
        type: *ids2
        value: ' '

    GetTitleEndNote:
      parameters:
        titleid: ' '

    GetTitleItems:
      parameters:
        titleid: ' '

    GetTitleMetadata:
      parameters:
        titleid: ' '
        items: ' '

    GetUnpublishedItems:
      parameters: Null
        
    GetUnpublishedParts:
      parameters: Null
        
    GetUnpublishedTitles:
      parameters: Null

    NameCount:
      parameters:
        startdate: ' '
        enddate: ' '

    #NameCountBetweenDates:
    #  parameters:
        
    #NameGetDetailForName:
    #  parameters:

    #NameGetDetailForNameBankID:
    #  parameters:

    NameList:
      parameters:
        startrow: ' '
        batchsize: ' '
        startdate: ' '
        enddate: ' '

    #NameListBetweenDates:
    #  parameters:

    NameSearch:
      parameters:
        name: ' '

    PartSearch:
      parameters:
        title: ' ' 
        author: ' '
        date: ' '
        volume: ' '
        series: ' '
        issue: ' '

    SubjectSearch:
      parameters:
        subject: ' '

    TitleSearchSimple:
      parameters:
        title: ' '

api:
  query: &query
    help: | 
      --------
       query
      --------

      Grammar:
        <PROTOTYPE->VALUE : (PARAMETER)->VALUE> ...(OPTION)->VALUE
    namespace: 'query'
    path: '/httpquery.ashx?{0}'
    input:
      type: key_value
      params: 
        methods: *methods
      options: 
        format: format
        callback: callback
      required: *required
      syntax:
        prototype:
          bind: '='
          chain: '&'
        field:
          bind: '='
          chain: '&'
        option:
          bind: '='
          chain: '&'
    output:
      default: xml

  default: *query